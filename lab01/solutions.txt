Solutions for lab01:

Generelle Bemerkungen:
- Im Script wird i immer wieder neu gesetzt, agiert also gar nicht als counter.

Aufgabe 4.1:
1:/home/vagrant/snp/P01_Bash:tab2xml.sh
1:/home/vagrant/snp/P01_Bash:tab2html.sh
1:/home/vagrant/snp/P01_Bash:get-exec-list-arg.sh

Aufgabe 4.2:
+ path=/home/vagrant/snp/P01_Bash
+ '[' -n /home/vagrant/snp/P01_Bash ']'
+ IFS=:
+ for p in $path
+ i=1
+ '[' -n /home/vagrant/snp/P01_Bash ']'
+ '[' -d /home/vagrant/snp/P01_Bash ']'
+ '[' -x /home/vagrant/snp/P01_Bash ']'
+ find -L /home/vagrant/snp/P01_Bash -maxdepth 1 -type f -executable -printf '1:%h:%f\n'
1:/home/vagrant/snp/P01_Bash:tab2xml.sh
1:/home/vagrant/snp/P01_Bash:tab2html.sh
1:/home/vagrant/snp/P01_Bash:get-exec-list-arg.sh

Aufgabe 4.4:

12:
Falls kein Argument übergeben wird, dann wird der Inhalt der Variable leer sein.

13:
Die Bedingung -n gibt true zurück, falls der Wert von "$path" nicht null ist.
Falls der Wert nun Null ist, dann wird false zurückgegeben und beim logischen oder muss
somit die zweite Expression evaluiert werden und somit wird das zweite Kommando ausgeführt.

18:
Der Loop wird drei Mal ausgeführt, da mittels IFS das Trennzeichen ":" definiert wird.

20:
Arithmetische Ausdrücke müssen mit doppelten Klammern umschlossen werden, damit diese als
solche behandlet werden.

21:
p bleibt abc, da -n true zurückgibt, falls der Inhalt nicht Null ist. Da in diesem Fall der Wert abc in der Variable p steht, wird die zweite Expression beim logischen oder nicht ausgeführt.

22:
Wenn der durch die Variable $p angegebene Ordnerpfad existiert und Ausführrechte auf diesem
existieren.

24:
find 
	-L "$p" 		# symbolische links sollen verfolgt werden, heisst nicht
				# der link soll untersucht werden, sondern das file hinter
				# hinter dem link
	-maxdepth 1 		# suche nur in maximaler tiefe 1
	-type f 		# suche nach dem typ f für "file"
	-executable 		# grenze nur ausführbare files ein
	-printf "$i:%h:%f\n" 	# alle ausgaben des resultats des find commands durchlaufen
				# erst diese -printf anweisung, welche den output entsprechend
				# formatiert, dabei stellen %h und %f platzhalter dar, %h
				# steht für das "leading directory" des gefundenen files und
				# %f für den namen des files selbst
	2>/dev/null		# alle errors sollen verschluckt werden

Was bedeuted der printf Format String?

Was bedeuted 2>/dev/null?
2> ist der stderr und mittels >/dev/null werden alle Fehlermeldungen verschluckt.

Aufgabe 5.1:
./get-exec-list-arg.sh $PWD | ./tab2html.sh > out.html && firefox out.html


Aufgabe 5.2:
./get-exec-list-arg.sh $PWD | cut -d: -f1,2 | sort -u -n

1. Zuerst wird das Scripts ausgeführt
2. Der Cut Befehl ermöglicht das Ausschneiden von Elementen pro Zeile
   -> es wird als delimiter das ":"-Zeichen verwendet
   -> somit ergeben sich drei Elemente pro Zeile, von welchen wir aber nur die ersten
      zwei behalten wollen
   -> schliesslich wird sort aufgerufen, -u steht für unique, also doppelte elemente
      werden eliminiert und -n für numeric, also es wird numerisch sortiert
      es gibt somit nur noch ein element weil wenn der filename gelöscht wird am schluss
      sehen die drei Zeilen genau gleich aus
